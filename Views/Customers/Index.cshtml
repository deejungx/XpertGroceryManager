@model PaginatedList<XpertGroceryManager.Models.Customer>

@{
    ViewData["Title"] = "Customers";
}

<div class="row">
    <div class="col-sm-8">
        <h1 class="mb-3" style="float: left;">Customers</h1>
    </div>
    <div class="col-sm-4">
        <p class="add-btn-container">
            <a class="btn btn-primary" role="button" asp-action="Create">Add a Customer</a>
        </p>
    </div>
</div>

<div class="searchbox">
    <form asp-action="Index" method="get">
        <div class="form-actions no-color">
            <p>
                Find: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                <input type="submit" value="Search" class="btn btn-secondary" /> |
                <a asp-action="Index">Reset</a>
            </p>
        </div>
    </form>
</div>

<table class="table table-hover table-striped">
    <thead class="thead-dark">
        <tr>
            <th scope="col">
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
            </th>
            <th scope="col">
                Member #
            </th>
            <th scope="col">
                Member Type
            </th>
            <th scope="col">
                Phone
            </th>
            <th scope="col">
                Email
            </th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MemberNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MemberType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    <a class="badge badge-success action-button" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <a class="badge badge-info action-button" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    <a class="badge badge-danger action-button" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-secondary @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-secondary @nextDisabled">
    Next
</a>