@model PaginatedList<XpertGroceryManager.Models.Product>

@{
    ViewData["Title"] = "Dashboard";
}


<div>
    <h1 class="mb-3">Dashboard</h1>
</div>

<div class="row mb-3">
    <div class="col-md-3">
        <div class="card-counter success">
            <i class="fa fa-box-open"></i>
            <span class="count-numbers">@ViewData["ProductCount"]</span>
            <span class="count-name">Products</span>
        </div>
    </div>

    <div class="col-md-3">
        <div class="card-counter info">
            <i class="fa fa-users"></i>
            <span class="count-numbers">@ViewData["CustomerCount"]</span>
            <span class="count-name">Customers</span>
        </div>
    </div>

    <div class="col-md-3">
        <div class="card-counter primary">
            <i class="fa fa-rupee-sign"></i>
            <span class="count-numbers">-</span>
            <span class="count-name">Revenue</span>
        </div>
    </div>

    <div class="col-md-3">
        <div class="card-counter danger">
            <i class="fa fa-receipt"></i>
            <span class="count-numbers">-</span>
            <span class="count-name">Expenditure</span>
        </div>
    </div>
</div>

<div class="mb-3">
    <hr />
    <h3>These items are currently low on stock!</h3>
</div>

<table class="table table-hover table-striped">
    <thead class="thead-light">
        <tr>
            <th scope="col">
                <a asp-action="Dashboard" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
            </th>
            <th scope="col">
                <a asp-action="Dashboard" asp-route-sortOrder="@ViewData["QuantitySortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Quantity</a>
            </th>
            <th scope="col">
                Price
            </th>
            <th scope="col">
                Category
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Stock.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Dashboard"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-secondary @prevDisabled">
    Previous
</a>
<a asp-action="Dashboard"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-secondary @nextDisabled">
    Next
</a>
